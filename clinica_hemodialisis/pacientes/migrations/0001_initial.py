# Generated by Django 4.2.5 on 2023-10-06 23:36

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id_patient', models.AutoField(primary_key=True, serialize=False, verbose_name='ID Paciente')),
                ('patient_name', models.CharField(max_length=255, verbose_name='Nombre Paciente')),
                ('patient_last_name', models.CharField(max_length=255, verbose_name='Apellido Paciente')),
                ('patient_age', models.IntegerField(verbose_name='Edad')),
                ('gender', models.CharField(choices=[('M', 'Masculino'), ('F', 'Femenino'), ('O', 'Otro')], max_length=1, verbose_name='Género')),
                ('cell_number', models.CharField(max_length=10, unique=True, verbose_name='Telefono Celular')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electronico')),
                ('allergies', models.TextField(max_length=500, verbose_name='Alergias')),
                ('symptoms', models.TextField(max_length=500, verbose_name='Síntomas')),
                ('street_address', models.CharField(max_length=255, verbose_name='Dirección')),
                ('city', models.CharField(max_length=255, verbose_name='Ciudad')),
                ('state', models.CharField(max_length=255, verbose_name='Estado')),
                ('postal_code', models.CharField(max_length=10, verbose_name='Código Postal')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Creacion')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='Fecha de Actualizacion')),
                ('groups', models.ManyToManyField(blank=True, related_name='patients_group', to='auth.group')),
                ('id_username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='patients_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'paciente',
                'verbose_name_plural': 'pacientes',
                'ordering': ['-created'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
